{"version":3,"sources":["webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/view-status/view-status.component.html","webpack:///./src/app/dashboard/dashboard-routing.module.ts","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/dashboard/view-status/view-status.component.scss","webpack:///./src/app/dashboard/view-status/view-status.component.ts","webpack:///./src/app/model/api.ts","webpack:///./src/app/model/status.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module.js","sourcesContent":["module.exports = \"<ngx-spinner></ngx-spinner>\\n<section id=\\\"minimal-statistics-bg\\\">\\n  <!-- <div class=\\\"row text-left\\\">\\n    <div class=\\\"col-12 mt-3 mb-1\\\">\\n      <div class=\\\"content-header\\\"> HOI API Monitoring Tool</div>\\n    </div>\\n  </div>\\n  <div class=\\\"form-actions c\\\">\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"places-buttons\\\">\\n        <div class=\\\"row\\\">\\n          <div *ngFor=\\\"let api of apis\\\">\\n            <button class=\\\"btn btn-primary\\\" style=\\\"width: 280px; height: 130px; margin-right: 50px; margin-bottom:50px;\\\"\\n              (click)=\\\"viewStatus(api)\\\">\\n              <div>\\n                <i [className]=\\\"api.cssClass\\\"></i>\\n              </div>\\n              <span style=\\\"color: white; font-size : 12px \\\">{{api.appName}}&nbsp;&nbsp;-&nbsp;&nbsp;{{api.percent}}%\\n                <br><br>Avg Latency : {{api.avgResponseTime}}ms\\n                <br>&nbsp;Avg DNS Lookup Time : {{api.avgDNSLookupTime}}ms\\n                <br>&nbsp;&nbsp;Avg TCPIP Connect Time : {{api.avgTCPIPConnectTime}}ms\\n              </span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div> -->\\n<div  class=\\\"row\\\">\\n  <div class=\\\"col-xl-4 col-lg-6 col-md-6 col-12\\\">\\n\\t\\t<div class=\\\"card gradient-pomegranate\\\">\\n\\t\\t\\t<div class=\\\"card-content\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body pt-2 pb-0\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"media\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"media-body white text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-raised \\\" style=\\\"color:white\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/reports/assessmentreport\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tStore 1</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n          </div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n  <div class=\\\"col-xl-4 col-lg-6 col-md-6 col-12\\\">\\n\\t\\t<div class=\\\"card gradient-blackberry\\\">\\n\\t\\t\\t<div class=\\\"card-content\\\">\\n\\t\\t\\t\\t<div class=\\\"card-body pt-2 pb-0\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"media\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"media-body white text-center\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-raised \\\" style=\\\"color:white\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\trouterLink=\\\"/reports/assessmentreport\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\tStore2</button>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n  </div>\\n</section>\"","module.exports = \"<ngx-spinner ></ngx-spinner>\\n<section id=\\\"simple\\\">\\n  <div class=\\\"row text-left\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header pb-2\\\">\\n              <h4 class=\\\"card-title\\\" id=\\\"basic-layout-colored-form-control\\\">URL Details: {{appURL}}</h4>\\n              <button type=\\\"button\\\"class=\\\"btn btn-raised btn-warning\\\"                      \\n              routerLink=\\\"/dashboard\\\">\\n              <i class=\\\"ft-x\\\"></i> Back\\n          </button>\\n          </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"col-sm-12\\\">\\n\\n            <table class=\\\"table table-responsive-md \\\">\\n              <thead>\\n                <tr>\\n                  <th>Id</th>\\n                  <th>Status</th>\\n                  <th>Latency</th>\\n                  <th>DNS LookUp Time</th>\\n                  <th>TCP IP ConnectTime</th>\\n                  <th>Date & Time</th>\\n                </tr> \\n              </thead>\\n              <tbody *ngFor=\\\"let status of statuses; index as i\\\">\\n                <tr>\\n                  <td>{{i+1}}</td>\\n                  <td>{{status.status}}</td>\\n                  <td>{{status.responseTime}}ms</td>\\n                  <td>{{status.dnsLookupTime}}ms</td>\\n                  <td>{{status.tcpIPConnectTime}}ms</td>\\n                  <td>{{status.createdAt|date:'dd-MM-yyyy HH:mm:ss'}}</td>\\n                 \\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard.component';\nimport { ViewStatusComponent } from './view-status/view-status.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n     component: DashboardComponent,\n    data: {\n      title: 'Dashboard'\n    },\n    \n  },\n\n  {\n    path: 'view-status',\n     component: ViewStatusComponent,\n    data: {\n      title: 'view-status'\n    },\n    \n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","module.exports = \"/* You can add global styles to this file, and also import other style files */\\nbody {\\n  background-color: #f1f0f7;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL0Y6XFxPcGVuU3BhY2UgUHJvamVjdHNcXFNtYXJ0IFNhZmUgUHJvamVjdFxcU21hcnRTYWZlIFdlYlxcOS0zLTIwMjJcXHNtYXJ0c2FmZXdlYi9zcmNcXGFwcFxcZGFzaGJvYXJkXFxkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEVBQUE7QUFDQTtFQUNJLHlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogWW91IGNhbiBhZGQgZ2xvYmFsIHN0eWxlcyB0byB0aGlzIGZpbGUsIGFuZCBhbHNvIGltcG9ydCBvdGhlciBzdHlsZSBmaWxlcyAqL1xyXG5ib2R5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigyNDEsIDI0MCwgMjQ3KTtcclxuICB9IiwiLyogWW91IGNhbiBhZGQgZ2xvYmFsIHN0eWxlcyB0byB0aGlzIGZpbGUsIGFuZCBhbHNvIGltcG9ydCBvdGhlciBzdHlsZSBmaWxlcyAqL1xuYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYwZjc7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Application } from 'app/model/api';\nimport { Router } from '@angular/router';\nimport { environment } from 'environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Status } from 'app/model/status';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*' ,\n      'Access-Control-Allow-Methods':'GET, POST, PATCH, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\n      'Authorization': 'Basic ' + btoa('dashboard:$dashboardPWD$')\n    })\n  } \n\n  api=new Application();\n  status=new Status();\n  apis: Application[];\n  constructor(private http: HttpClient,private router:Router,private spinner:NgxSpinnerService) {\n\n   }\n \n   \n          \n\n  ngOnInit() {\n   // this.spinner.show();\n   // this.getAllEndPointsList();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { ViewStatusComponent } from './view-status/view-status.component';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [DashboardComponent, ViewStatusComponent],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    NgxSpinnerModule\n  ]\n})\nexport class DashboardModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC92aWV3LXN0YXR1cy92aWV3LXN0YXR1cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { Status } from 'app/model/status';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-view-status',\n  templateUrl: './view-status.component.html',\n  styleUrls: ['./view-status.component.scss']\n})\nexport class ViewStatusComponent implements OnInit {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*' ,\n      'Access-Control-Allow-Methods':'GET, POST, PATCH, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\n      'Authorization': 'Basic ' + btoa('dashboard:$dashboardPWD$')\n    })\n  } \n  appURL:string; \n  status=new Status();\n  statuses:Status[];\n  constructor(private http: HttpClient,private router:Router,private spinner:NgxSpinnerService) {\n\n    this.getAllStatusListByAppId();\n   }\n \n  getStatusListByAppId(){\n    var appId = localStorage.getItem(\"appId\");\n    this.appURL = localStorage.getItem(\"appURL\");\n    return this.http.get<Status[]>(environment.smartSafeAPIUrl+'/getAppStatusbyAppID?appId='+appId,this.httpOptions);\n  }\n\n  getAllStatusListByAppId() {\n       \n            \n      return this.getStatusListByAppId().\n      subscribe((data) => {\n        console.log(data);\n        this.statuses = data;\n        this.spinner.hide();\n      });\n      \n          }  \n  ngOnInit() {\n    this.spinner.show();\n    this.getAllStatusListByAppId();\n  }\n\n}\n","import { Header } from './header';\r\n\r\nexport class Application{\r\n    appId:number;\r\n\tappURL:string;\r\n\tdomain:string;\r\n\tappName:string;\r\n\tsecurity:string;\r\n\tactive:boolean;\r\n\theader:boolean;\r\n\tcssClass:string;\r\n\tpercent:number;\r\n\tfailureCount:number;\r\n\tscheduleTime:string;\r\n\tavgResponseTime:string;\r\n\tavgDNSLookupTime:string;\r\n\tavgTCPIPConnectTime:string;\r\n\theaders:Array<Header>;\r\n}","import { UserAccount } from './user';\r\nimport { Time } from '@angular/common';\r\n\r\nexport class Status{\r\n     statusId:Number;\r\n    status:string;\r\n   user:UserAccount;\r\n    createdAt:Date;\r\n    mailTriggeredAt:Date;\r\n    responseTime:Time;\r\n    dnsLookupTime:Time;\r\n    tcpIPConnectTime:Time;\r\n    constructor() {\r\n        this.user = new UserAccount();\r\n       \r\n      }\r\n    \r\n}"],"sourceRoot":""}