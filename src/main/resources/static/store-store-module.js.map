{"version":3,"sources":["webpack:///./src/app/store/assignstore/assignstore.component.html","webpack:///./src/app/store/createstore/createstore.component.html","webpack:///./src/app/model/storeInfoRequest.ts","webpack:///./src/app/store/assignstore/assignstore.component.scss","webpack:///./src/app/store/assignstore/assignstore.component.ts","webpack:///./src/app/store/createstore/createstore.component.scss","webpack:///./src/app/store/createstore/createstore.component.ts","webpack:///./src/app/store/store-routing.module.ts","webpack:///./src/app/store/store.module.ts"],"names":[],"mappings":"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","file":"store-store-module.js","sourcesContent":["module.exports = \"<!-- <ngx-spinner></ngx-spinner> -->\\n<section id=\\\"image\\\">\\n  <div class=row>\\n    <div class=\\\" col-md-12 \\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"row text-left\\\">\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"content-header\\\" style=\\\"font-size: 20px\\\">Store Management</div>\\n              <br>\\n              <p class=\\\"content-sub-header\\\"> <a routerLink=\\\"/dashboard/dashboard1\\\"><span\\n                    style=\\\"font-size: 15px\\\">Home</span></a>\\n                <span style=\\\"font-size: 15px\\\">/Assign Store</span>\\n\\n              </p>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n            <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <form class=\\\"form\\\" #addClassForm=\\\"ngForm\\\" novalidate>\\n                  <div class=\\\"form-body\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-info \\\" routerLink=\\\"/store/createstore\\\">\\n                      Create Store\\n                     </button>\\n                     <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <fieldset class=\\\"form-group\\\">\\n                            <label for=\\\"storeSelect\\\">Select Store</label>\\n                            <select class=\\\"form-control border-primary\\\" [(ngModel)]=\\\"store\\\" required id=\\\"store\\\"\\n                            (change)='onStoreSelected(store.storeName)' name=\\\"store\\\">\\n                              <option [ngValue]=\\\"store\\\" *ngFor=\\\"let store of stores\\\">\\n                                {{store.storeName}} </option>\\n                            </select>\\n                          </fieldset>\\n                        </div>\\n                      </div>\\n                   \\n                    <div class=\\\"col-md-6\\\">\\n                      <div class=\\\"form-group\\\">\\n                        <label for=\\\"address\\\">Store Location\\n                        </label>\\n                       \\n                        <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control border-primary\\\" name=\\\"address\\\"\\n                          [(ngModel)]=\\\"selectedStore.address\\\" disabled>\\n\\n                      </div>\\n                    </div>\\n                   \\n                     </div>\\n                    <div class=\\\"row\\\">\\n                      \\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <fieldset class=\\\"form-group\\\">\\n                            <label for=\\\"roleSelect\\\">Select Role</label>\\n                            <select class=\\\"form-control border-primary\\\" [(ngModel)]=\\\"role\\\"\\n                            (change)='onRoleSelected(role.name)' required id=\\\"role\\\" name=\\\"role\\\">\\n                              <option [ngValue]=\\\"role\\\" *ngFor=\\\"let role of roles\\\">\\n                                {{role.name}} </option>\\n                            </select>\\n                          </fieldset>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <fieldset class=\\\"form-group\\\">\\n                            <label for=\\\"storeSelect\\\">Select User </label>\\n                            <select required [(ngModel)]=\\\"employee\\\" id=\\\"employee\\\" name=\\\"employee\\\"\\n                                class=\\\"form-control border-primary\\\">\\n                                <option>Select User Name</option>\\n                                <option [ngValue]=\\\"employee\\\" *ngFor=\\\"let employee of employees\\\">\\n                                    {{employee.username}} </option>\\n                            </select>\\n                        </fieldset>\\n  \\n                    </div>\\n                     \\n\\n                    </div>\\n                  \\n                  </div>\\n                  <div class=\\\"form-actions center\\\">\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary mr-1\\\" (click)=\\\"addRole()\\\"\\n                      [disabled]=\\\"!addClassForm.valid\\\">\\n                      <i class=\\\"fa fa-check-square-o\\\"></i> Assign Store\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-warning\\\">\\n                      <i class=\\\"ft-x\\\"></i> Cancel\\n                    </button>\\n                  </div>\\n                </form>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"<!-- <ngx-spinner></ngx-spinner> -->\\n<section id=\\\"image\\\">\\n  <div class=row>\\n    <div class=\\\" col-md-12 \\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"row text-left\\\">\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"content-header\\\" style=\\\"font-size: 20px\\\">Store Management</div>\\n              <br>\\n              <p class=\\\"content-sub-header\\\"> <a routerLink=\\\"/dashboard/dashboard1\\\"><span\\n                    style=\\\"font-size: 15px\\\">Home</span></a>\\n                <span style=\\\"font-size: 15px\\\">/Add Store</span>\\n\\n              </p>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n         \\n\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <form class=\\\"form\\\" #addClassForm=\\\"ngForm\\\" novalidate>\\n                  <div class=\\\"form-body\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-info \\\" routerLink=\\\"/store/assignstore\\\">\\n                      Assign Store\\n                     </button>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"storeName\\\"><span *ngIf=\\\"storeInfoRequest.storeName == undefined || storeInfoRequest.storeName =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Enter Store Name\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\" *ngIf=\\\"!storeName.valid && (storeName.dirty || storeName.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"storeName\\\" class=\\\"form-control border-primary\\\" name=\\\"storeName\\\"\\n                            [(ngModel)]=\\\"storeInfoRequest.storeName\\\" ngModel #storeName=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"corpStoreNo\\\"><span *ngIf=\\\"storeInfoRequest.corpStoreNo == undefined || storeInfoRequest.corpStoreNo =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Enter Corp StoreNo\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\" *ngIf=\\\"!corpStoreNo.valid && (corpStoreNo.dirty || corpStoreNo.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"corpStoreNo\\\" class=\\\"form-control border-primary\\\" name=\\\"corpStoreNo\\\"\\n                            [(ngModel)]=\\\"storeInfoRequest.corpStoreNo\\\" ngModel #corpStoreNo=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"serialNumber\\\"><span *ngIf=\\\"storeInfoRequest.serialNumber == undefined || storeInfoRequest.serialNumber =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Store Serial Number\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!serialNumber.valid && (serialNumber.dirty || serialNumber.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"serialNumber\\\" class=\\\"form-control border-primary\\\" name=\\\"serialNumber\\\"\\n                            [(ngModel)]=\\\"storeInfoRequest.serialNumber\\\" ngModel #serialNumber=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"address\\\"><span *ngIf=\\\"storeInfoRequest.address == undefined || storeInfoRequest.address =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Store Location\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!address.valid && (address.dirty || address.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"address\\\" class=\\\"form-control border-primary\\\" name=\\\"address\\\"\\n                            [(ngModel)]=\\\"storeInfoRequest.address\\\" ngModel #address=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"bankName\\\"><span *ngIf=\\\"storeInfoRequest.bankName == undefined || storeInfoRequest.bankName =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Bank Name\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!bankName.valid && (bankName.dirty || bankName.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"bankName\\\" class=\\\"form-control border-primary\\\" name=\\\"bankName\\\"\\n                            [(ngModel)]=\\\"storeInfoRequest.bankName\\\" ngModel #bankName=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"accountNumber\\\"><span *ngIf=\\\"storeInfoRequest.accountNumber == undefined || storeInfoRequest.accountNumber =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Account Number\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!accountNumber.valid && (accountNumber.dirty || accountNumber.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"accountNumber\\\" class=\\\"form-control border-primary\\\" name=\\\"accountNumber\\\"\\n                            [(ngModel)]=\\\"storeInfoRequest.accountNumber\\\" ngModel #accountNumber=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      </div>\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                          <div class=\\\"form-group\\\">\\n                            <label for=\\\"minimumBalance\\\"><span *ngIf=\\\"storeInfoRequest.minimumBalance == undefined || storeInfoRequest.minimumBalance =='' \\\"\\n                                style=\\\"color: red\\\">*</span>Minimum Balance\\n                            </label>\\n                            <span class=\\\" text-muted danger\\\"\\n                              *ngIf=\\\"!minimumBalance.valid && (minimumBalance.dirty || minimumBalance.touched)\\\">\\n                              is required!\\n                            </span>\\n                            <input type=\\\"text\\\" id=\\\"minimumBalance\\\" class=\\\"form-control border-primary\\\" name=\\\"minimumBalance\\\"\\n                              [(ngModel)]=\\\"storeInfoRequest.minimumBalance\\\" ngModel #minimumBalance=\\\"ngModel\\\" required>\\n  \\n                          </div>\\n                        </div>\\n                      <!-- <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"d-block\\\">Configured</label>\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"custom-control custom-radio d-inline-block float-left\\\">\\n                              <input type=\\\"radio\\\" checked id=\\\"active\\\" name=\\\"active\\\" class=\\\"custom-control-input\\\"\\n                                [value]=true [(ngModel)]=\\\"storeInfoRequest.configured\\\">\\n                              <label class=\\\"custom-control-label\\\" for=\\\"active\\\">Yes</label>\\n                            </div>\\n                            <div class=\\\"custom-control custom-radio d-inline-block float-left ml-1\\\">\\n                              <input type=\\\"radio\\\" id=\\\"inactive\\\" name=\\\"inactive\\\" class=\\\"custom-control-input\\\"\\n                                [value]=false [(ngModel)]=\\\"storeInfoRequest.configured\\\">\\n                              <label class=\\\"custom-control-label\\\" for=\\\"inactive\\\">No</label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div> -->\\n                    </div>\\n                  </div>\\n                  <div class=\\\"form-actions center\\\">\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary mr-1\\\" (click)=\\\"addStore()\\\"\\n                      [disabled]=\\\"!addClassForm.valid\\\">\\n                      <i class=\\\"fa fa-check-square-o\\\"></i> Create\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-warning\\\">\\n                      <i class=\\\"ft-x\\\"></i> Cancel\\n                    </button>\\n                  </div>\\n                </form>\\n\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n<section id=\\\"image\\\">\\n  <div class=row>\\n    <div class=\\\" col-md-12 \\\">\\n      <div class=\\\"card\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <section id=\\\"simple\\\">\\n\\n              <!-- <div class=\\\"col-sm-6\\\">\\n                <form storeInfoRequest=\\\"search\\\">\\n                  <div class=\\\"position-relative has-icon-right\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control round\\\" placeholder=\\\"Search\\\" name=\\\"search\\\"\\n                      [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\n                    <div class=\\\"form-control-position\\\">\\n                      <i class=\\\"ft-search\\\"></i>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div> -->\\n              <br>\\n              <div class=\\\"row text-left\\\">\\n\\n                <div class=\\\"col-sm-12\\\">\\n                  <table class=\\\"table table-responsive-md text-center\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>S.no</th>\\n                        <th>Corp StoreNo</th>\\n                        <th>Serial Number</th>\\n                        <th>Store Name</th>\\n                        <th>Store Location</th>\\n                        <th>Status</th>\\n                        <th>Action</th>\\n                      </tr>\\n                    </thead>\\n                    <!-- <tbody\\n                        *ngFor=\\\"let storeInfoRequest of storeInfoRequests| slice: (page-1) * pageSize : +((page-1) * pageSize) + +pageSize; index as i\\\"> -->\\n                    <tbody *ngFor=\\\"let storeInfoRequest of storeInfoRequests;index as i\\\">\\n                      <tr>\\n                        <!-- <td>{{i+1+(page-1) * pageSize}}</td> -->\\n                        <td>{{i+1}}</td>\\n                        <td>{{storeInfoRequest.corpStoreNo}}</td>\\n                        <td>{{storeInfoRequest.serialNumber}}</td>\\n                        <td>{{storeInfoRequest.storeName}}</td>\\n                        <td>{{storeInfoRequest.address}}</td>\\n                        <td>\\n                          <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editstoreInfoRequest(storeInfoRequest)\\\"\\n                            placement=\\\"bottom\\\" ngbTooltip=\\\"Edit\\\">\\n                            <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                          </a>\\n                          <!-- <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\"\\n                                                      (click)=\\\"deleteClass(class.id)\\\">\\n                                                    \\n                                                      <i class=\\\"icon-trash font-medium-3 mr-2\\\"></i>\\n                                                  </a> -->\\n                        </td>\\n                        <td><button type=\\\"button\\\" class=\\\"btn btn-raised\\\" disabled style=\\\"cursor:default\\\"\\n                            [ngClass]=\\\"{' btn-primary' : storeInfoRequest.configured,'btn-warning' :!storeInfoRequest.configured }\\\">\\n                            {{ storeInfoRequest.configured ? 'Yes' : 'No' }}\\n\\n                          </button></td>\\n\\n\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                  <!-- <div *ngIf=\\\"searchText != ''\\\">\\n                    <table class=\\\"table table-responsive-md text-center\\\">\\n                      <thead>\\n                        <tr>\\n                          <th>S.no</th>\\n                          <th>Class Name</th>\\n                          <th>Edit</th>\\n                          <th>Status</th>\\n\\n                        </tr>\\n                      </thead>\\n                      <tbody *ngFor=\\\"let class of classes| filter:searchText ; index as i\\\">\\n                        <tr>\\n                          <td>{{i+1+(page-1) * pageSize}}</td>\\n                          <td>{{class.name}}</td>\\n                          <td>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editClass(class)\\\"\\n                              placement=\\\"bottom\\\" ngbTooltip=\\\"Edit\\\">\\n                              <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\"\\n                                                        (click)=\\\"deleteClass(class.id)\\\">\\n                                                      \\n                                                        <i class=\\\"icon-trash font-medium-3 mr-2\\\"></i>\\n                                                    </a>\\n                          </td>\\n                          <td><button type=\\\"button\\\" class=\\\"btn btn-raised\\\" disabled style=\\\"cursor:default\\\"\\n                              [ngClass]=\\\"{' btn-primary' : class.active,'btn-warning' :!class.active }\\\">\\n                              {{ class.active ? 'Active' : 'Inactive' }}\\n\\n                            </button></td>\\n\\n\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </div> -->\\n                  <!-- <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                      <div class=\\\"formgroup\\\">\\n                        <ngb-pagination [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"classes.length\\\"\\n                          [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                      <div class=\\\"formgroup\\\">\\n                        Items per Page:\\n                        <select (change)=\\\"handlePageSizeChange($event)\\\">\\n                          <option *ngFor=\\\"let pageSize of pageSizes\\\" [ngValue]=\\\"pageSize\\\">\\n                            {{ pageSize }}\\n                          </option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                  </div> -->\\n                </div>\\n              </div>\\n            </section>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","export class StoreInfoRequest {\r\n\t  id:number;\r\n\r\n\t  storeName:string;\r\n\r\n\t  corpStoreNo:string;\r\n\r\n\t  serialNumber:string;\r\n\r\n\t  address:string;\r\n\r\n\t  bankName:string;\r\n\r\n\t  accountNumber:string;\r\n\r\n\t  minimumBalance:DoubleRange;\r\n\r\n\t  configured:boolean;\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b3JlL2Fzc2lnbnN0b3JlL2Fzc2lnbnN0b3JlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpClient } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Role } from 'app/model/role';\nimport { StoreInfoRequest } from 'app/model/storeInfoRequest';\nimport { UserAccount } from 'app/model/user';\nimport { NGXToastrService } from 'app/service/toastr.service';\nimport { environment } from 'environments/environment';\n\n@Component({\n  selector: 'app-assignstore',\n  templateUrl: './assignstore.component.html',\n  styleUrls: ['./assignstore.component.scss'],\n  providers: [NGXToastrService]\n})\nexport class AssignstoreComponent implements OnInit {\nrole = new Role();\nroles : Role[];\n\nstore = new StoreInfoRequest();\nstores:StoreInfoRequest[];\nselectedStore = new StoreInfoRequest();\n//selectedStores:StoreInfoRequest[];\nemployee = new UserAccount();\nemployees:UserAccount[];\n\n  constructor(private http: HttpClient,\n    private router: Router,\n    private service: NGXToastrService,\n    private changeDetectorRefs: ChangeDetectorRef) { }\n  getStoreList() {\n    return this.http.get<StoreInfoRequest[]>(environment.smartSafeAPIUrl + '/storeinfo/all');\n  }\n  getAllStoresList() {\n    return this.getStoreList().\n      subscribe((data) => {\n        console.log(data);\n        this.stores = data;\n        this.changeDetectorRefs.markForCheck();\n      });\n  }\n\n  onStoreSelected(storeName: string) {\n    this.getStoresByStoreName(storeName).\n      subscribe((data) => {\n        this.selectedStore = data;\n\n      })\n  }\n\n  getStoresByStoreName(storeName: string) {\n    return this.http.get<StoreInfoRequest>(environment.smartSafeAPIUrl + '/storeinfo/' + storeName  );\n  }\n  getRoleList() {\n\n    return this.http.get<Role[]>(environment.smartSafeAPIUrl + '/role/all');\n  }\n  getAllRolesList() {\n    return this.getRoleList().\n      subscribe((data) => {\n        console.log(data);\n        this.roles = data;\n        this.changeDetectorRefs.markForCheck();\n      });\n  }\n  onRoleSelected(roleName: string) {\n    this.getEmployeesByrole(roleName).\n      subscribe((data) => {\n        this.employees = data;\n\n      })\n  }\n\n  getEmployeesByrole(roleName: string) {\n    return this.http.get<UserAccount[]>(environment.smartSafeAPIUrl + '/userInfo/role/'+ roleName);\n  }\n  ngOnInit() {\n    this.getAllStoresList();\n    this.getAllRolesList();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0b3JlL2NyZWF0ZXN0b3JlL2NyZWF0ZXN0b3JlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Role } from 'app/model/role';\nimport { StoreInfoRequest } from 'app/model/storeInfoRequest';\nimport { NGXToastrService } from 'app/service/toastr.service';\nimport { environment } from 'environments/environment';\n\n@Component({\n  selector: 'app-createstore',\n  templateUrl: './createstore.component.html',\n  styleUrls: ['./createstore.component.scss'],\n  providers: [NGXToastrService]\n})\nexport class CreatestoreComponent implements OnInit {\n  storeInfoRequest = new StoreInfoRequest();\n  storeInfoRequests: StoreInfoRequest[];\n\n  constructor(private http: HttpClient,\n    private router: Router,\n    private service: NGXToastrService,\n    private changeDetectorRefs: ChangeDetectorRef) {\n  }\n  getStoreList() {\n    return this.http.get<StoreInfoRequest[]>(environment.smartSafeAPIUrl + '/storeinfo/all');\n  }\n  getAllStoresList() {\n    return this.getStoreList().\n      subscribe((data) => {\n        console.log(data);\n        this.storeInfoRequests = data;\n        this.changeDetectorRefs.markForCheck();\n      });\n  }\n  addStore() {\n    this.storeInfoRequest.configured=false; \n    this.http.post<StoreInfoRequest>(environment.smartSafeAPIUrl + '/storeinfo/', this.storeInfoRequest).subscribe(\n      res => {\n        console.log(res);\n        //event.confirm.resolve(event.newData);\n        this.service.addSuccess();\n        this.getAllStoresList();\n      },\n      (err: HttpErrorResponse) => {\n        if (err.error instanceof Error) {\n          console.log(\"Client-side error occured.\");\n        } else {\n          console.log(\"Server-side error occured.\");\n        }\n        this.service.typeWarning();\n      });\n    console.log(JSON.stringify(this.storeInfoRequest));\n    this.getAllStoresList();\n  }\n  ngOnInit() {\n    this.getAllStoresList();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AssignstoreComponent } from './assignstore/assignstore.component';\nimport { CreatestoreComponent } from './createstore/createstore.component';\n\nconst routes: Routes = [\n  {\n    path: 'createstore',\n     component: CreatestoreComponent,\n    data: {\n      title: 'Store Management'\n    },\n    \n  },\n  {\n    path: 'assignstore',\n     component: AssignstoreComponent,\n    data: {\n      title: 'Assign Store'\n    },\n    \n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StoreRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { StoreRoutingModule } from './store-routing.module';\nimport { CreatestoreComponent } from './createstore/createstore.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { AssignstoreComponent } from './assignstore/assignstore.component';\n\n@NgModule({\n  declarations: [CreatestoreComponent, AssignstoreComponent],\n  imports: [\n    CommonModule,\n    StoreRoutingModule,\n    NgbModule,FormsModule,\n    NgSelectModule\n  ]\n})\nexport class StoreModule { }\n"],"sourceRoot":""}