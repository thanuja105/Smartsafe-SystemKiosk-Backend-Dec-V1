{"version":3,"sources":["webpack:///./src/app/settings/change-password/change-password.component.html","webpack:///./src/app/settings/my-profile/my-profile.component.html","webpack:///./src/app/model/ChangePasswordDto.ts","webpack:///./src/app/settings/change-password/change-password.component.scss","webpack:///./src/app/settings/change-password/change-password.component.ts","webpack:///./src/app/settings/my-profile/my-profile.component.scss","webpack:///./src/app/settings/my-profile/my-profile.component.ts","webpack:///./src/app/settings/settings-routing.module.ts","webpack:///./src/app/settings/settings.module.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\"><h4> Change Password</h4></div>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-6\\\">\\r\\n                        <form name=\\\"forgotPasswordForm\\\" #forgotPasswordForm=\\\"ngForm\\\">\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"oldPassword\\\" classs=\\\"form-control-label\\\"><span\\r\\n                            *ngIf=\\\"changePasswordDto.oldPassword == undefined ||changePasswordDto.oldPassword=='' \\\"\\r\\n                            style=\\\"color: red\\\">*</span>oldPassword</label>\\r\\n                                \\r\\n\\r\\n                            <input class=\\\"form-control input-md\\\" ngModel #oldPassword=\\\"ngModel\\\" required id=\\\"password\\\" name=\\\"oldPassword\\\" type=\\\"password\\\" [(ngModel)]=\\\"changePasswordDto.oldPassword\\\">\\r\\n                                <small class=\\\" text-muted danger\\\" *ngIf=\\\"!oldPassword.valid && (oldPassword.dirty || oldPassword.touched)\\\">\\r\\n                                    please enter old password\\r\\n                                </small>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"newPassword\\\" classs=\\\"form-control-label\\\"> <span\\r\\n                                    *ngIf=\\\"changePasswordDto.newPassword == undefined ||changePasswordDto.newPassword=='' \\\"\\r\\n                                    style=\\\"color: red\\\">*</span>newPassword</label>\\r\\n                                <input class=\\\"form-control input-md\\\" pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\"  #newPassword=\\\"ngModel\\\"\\r\\n                                    required id=\\\"password\\\" name=\\\"newPassword\\\" type=\\\"password\\\" [(ngModel)]=\\\"changePasswordDto.newPassword\\\">\\r\\n                                    \\r\\n                                    <div class=\\\"text-muted danger\\\" *ngIf=\\\"newPassword.touched&& newPassword.invalid\\\">\\r\\n                                         <span *ngIf=\\\"newPassword.errors.required\\\">\\r\\n                                             please provide new password\\r\\n                                         </span>\\r\\n                                         <span *ngIf=\\\"newPassword.errors.pattern\\\">\\r\\n                                            Must contain at least one number <br> One uppercase and lowercase letter <br> Atleast 8 or more characters.\\r\\n                                           </span>\\r\\n                                    </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <label for=\\\"confirmPassword\\\" classs=\\\"form-control-label\\\"> confirmPassword</label>\\r\\n                                <input class=\\\"form-control input-md\\\" ngModel #confirmPassword=\\\"ngModel\\\" required  id=\\\"confirmPassword\\\" name=\\\"confirmPassword\\\" type=\\\"password\\\" [(ngModel)]=\\\"changePasswordDto.confirmPassword\\\"\\r\\n                                pattern=\\\"{{ newPassword.value }}\\\">\\r\\n                                <div class=\\\"text-muted danger\\\" *ngIf=\\\"confirmPassword.touched && confirmPassword.invalid\\\">\\r\\n                                    <span *ngIf=\\\"confirmPassword.errors.required\\\">\\r\\n                                           please confirm password\\r\\n                                    </span>\\r\\n                                    <span *ngIf=\\\"confirmPassword.errors.pattern\\\">\\r\\n                                           confirm password does not match\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group text-center\\\">\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary mr-1\\\" (click)=\\\"onSubmitConfirm()\\\" routerLink=\\\"/pages/login\\\" [disabled]=\\\"!forgotPasswordForm.valid\\\">\\r\\n                        save\\r\\n                      </button><button type=\\\"button\\\" class=\\\"btn btn-raised btn-warning mr-1\\\">\\r\\n                        cancel\\r\\n                      </button>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"<section id=\\\"image\\\">\\n  <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header pb-2\\\">\\n              <h4 class=\\\"card-title\\\" id=\\\"basic-layout-colored-form-control\\\">My\\n                  Profile</h4>\\n  \\n          </div>\\n          <div class=\\\"card-content\\\">\\n              <div class=\\\"px-3\\\">\\n  \\n                  <form class=\\\"form\\\">\\n                      <div class=\\\"form-body\\\">\\n                          <h4 class=\\\"form-section\\\"><i class=\\\"ft-info\\\"></i> About User\\n                          </h4>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                      <label for=\\\"firstName\\\">First Name</label>\\n                                      <input type=\\\"text\\\" id=\\\"firstName\\\"\\n                                          class=\\\"form-control border-primary\\\"\\n                                          name=\\\"firstName\\\"\\n                                          [(ngModel)]=\\\"user.firstName\\\" disabled>\\n                                  </div>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                      <label for=\\\"lastName\\\">Last Name</label>\\n                                      <input type=\\\"text\\\" id=\\\"lastName\\\"\\n                                          class=\\\"form-control border-primary\\\"\\n                                          name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" disabled>\\n                                  </div>\\n                              </div>\\n                          </div>\\n  \\n                          <h4 class=\\\"form-section\\\"><i class=\\\"ft-mail\\\"></i> Contact\\n                              Info & Bio</h4>\\n                          <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                      <label for=\\\"userinput5\\\">Email</label>\\n                                      <input class=\\\"form-control border-primary\\\"\\n                                          type=\\\"email\\\" id=\\\"email\\\"\\n                                          [(ngModel)]=user.email name=\\\"email\\\" disabled>\\n                                  </div>\\n                              </div>\\n  \\n                              <div class=\\\"col-md-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                      <label>Phone Number</label>\\n                                      <input matInput\\n                                          class=\\\"form-control border-primary\\\"\\n                                          id=\\\"phoneNumber\\\" type=\\\"text\\\"\\n                                          name=\\\"phoneNumber\\\"\\n                                          [(ngModel)]=\\\"user.phoneNumber\\\"\\n                                          maxlength=\\\"10\\\" numberOnly disabled>\\n  \\n  \\n                                  </div>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n  \\n                                  <div class=\\\"col-md-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                      <fieldset class=\\\"form-group\\\" for=\\\"referredBy\\\">\\n                                        <label>Select User</label>\\n                                        <select class=\\\"form-control\\\" required id=\\\"referredBy\\\" name=\\\"referredBy\\\"\\n                                          [(ngModel)]=\\\"user.role\\\" disabled>\\n                                          <option>Select User</option>\\n                                          <option>Admin</option>\\n                                          <option>User</option>\\n              \\n                                        </select>\\n                                      </fieldset>\\n                                    </div>\\n                                  </div>\\n                                  <div class=\\\"col-md-6\\\">\\n                                    \\n                                    <!-- <div *ngIf=\\\"user.role=='Admin'\\\" class=\\\" mb-1\\\">\\n              \\n                                      <label>PassWord</label>\\n                                      <input class=\\\"form-control border-primary\\\" id=\\\"password\\\" type=\\\"text\\\" name=\\\"password\\\"\\n                                        [(ngModel)]=\\\"user.password\\\">\\n              \\n                                    </div> -->\\n                                    <div *ngIf=\\\"user.role=='User'\\\" class=\\\" mb-1\\\">\\n              \\n                                      <label>Department Name</label>\\n                                      <input class=\\\"form-control border-primary\\\" id=\\\"departmentName\\\" type=\\\"text\\\" name=\\\"departmentName\\\"\\n                                        [(ngModel)]=\\\"user.departmentName\\\" disabled>\\n              \\n                                    </div>\\n                                  </div>\\n                                </div>\\n                      </div>\\n                      <div class=\\\"form-group col-12 mb-2\\\">\\n                          <div class=\\\"form-check\\\">\\n                              <label>Status</label><br> <label class=\\\"radio-inline\\\">\\n                                  <input type=\\\"radio\\\" name=\\\"isActive\\\"\\n                                      [(ngModel)]=\\\"user.active\\\" value=true\\n                                      ng-checked=\\\"!user.active\\\">Active\\n                              </label> <label class=\\\"radio-inline\\\"> <input\\n                                      type=\\\"radio\\\" name=\\\"isActive\\\"\\n                                      [(ngModel)]=\\\"user.active\\\" value=false>Inactive\\n                              </label>\\n                          </div>\\n                      </div>\\n                      <!-- <div class=\\\"form-actions center\\\">\\n                          <button type=\\\"button\\\"\\n                              class=\\\"btn btn-raised btn-warning mr-1\\\"  routerLink=\\\"/user-management\\\">\\n                              <i class=\\\"ft-x\\\"></i> Cancel\\n                          </button>\\n                          <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary\\\"\\n                          (click)=\\\"updateUserManagement()\\\" routerLink=\\\"/user-management\\\"\\n                             >\\n                              <i class=\\\"fa fa-check-square-o\\\"></i> Update\\n                          </button>\\n                      </div>  -->\\n                  </form>\\n  \\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n  </section>\"","export class  ChangePasswordDto {\r\n      email:string;\r\n\t\r\n\t  oldPassword:string;\r\n\t\r\n\t  newPassword:string;\r\n\t\r\n\t  confirmPassword:string;\r\n   \r\n    \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL2NoYW5nZS1wYXNzd29yZC9jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'environments/environment';\r\nimport { ChangePasswordDto } from 'app/model/ChangePasswordDto';\r\nimport { NGXToastrService } from 'app/service/toastr.service';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss'],\r\n  providers:[NGXToastrService]\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*' ,\r\n      'Access-Control-Allow-Methods':'GET, POST, PATCH, PUT, DELETE, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\r\n      'Authorization': 'Basic ' + btoa('dashboard:$dashboardPWD$')\r\n    })\r\n  } \r\n  \r\n  changePasswordDto=new ChangePasswordDto();\r\n\r\n   \r\n  constructor(private http: HttpClient,private service:NGXToastrService) { }\r\n  onSubmitConfirm() {\r\n    \r\n       this.changePasswordDto.email = localStorage.getItem('email');\r\n\r\n      this.http.post<ChangePasswordDto>(environment.smartSafeAPIUrl + '/changePassword', this.changePasswordDto, this.httpOptions).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          //event.confirm.resolve(event.newData);\r\nthis.service.passwordChangeSuccess();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          if (err.error instanceof Error) {\r\n            console.log(\"Client-side error occured.\");\r\n          } else {\r\n            console.log(\"Server-side error occured.\");\r\n          }\r\n          this.service.typeWarning();\r\n        });\r\n  \r\n    \r\n    console.log(JSON.stringify(this.changePasswordDto));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL215LXByb2ZpbGUvbXktcHJvZmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { UserAccount } from 'app/model/user';\nimport { environment } from 'environments/environment';\nimport { HttpErrorResponse, HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Access-Control-Allow-Origin': '*' ,\n      'Access-Control-Allow-Methods':'GET, POST, PATCH, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Origin, Content-Type, X-Auth-Token',\n      'Authorization': 'Basic ' + btoa('dashboard:$dashboardPWD$')\n    })\n  } \n\n  user= new UserAccount();\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n   // this.user=JSON.parse(localStorage.getItem('user'));\n    this.loadUser();\n  }\n  loadUser(){\n   \n                   \n    //this.user=JSON.parse(localStorage.getItem('user'));  \n    var email =localStorage.getItem('email');\n      this.http.get<UserAccount>(environment.smartSafeAPIUrl + \"/userByEmail?email=\"+email, this.httpOptions).subscribe(\n        res => {\n          console.log(res);\n          //event.confirm.resolve(event.newData);\nthis.user=res;\n        },\n        (err: HttpErrorResponse) => {\n          if (err.error instanceof Error) {\n            console.log(\"Client-side error occured.\");\n          } else {\n            console.log(\"Server-side error occured.\");\n          }\n        });\n  \n   \n    console.log(JSON.stringify(this.user));\n  }\n}\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { MyProfileComponent } from './my-profile/my-profile.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'change-password',\r\n        component: ChangePasswordComponent,\r\n        data: {\r\n          title: 'ChangePassword'\r\n        }\r\n      },\r\n      \r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'my-profile',\r\n        component: MyProfileComponent,\r\n        data: {\r\n          title: 'My Profile'\r\n        }\r\n      },\r\n      \r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SettingsRoutingModule } from './settings-routing.module';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { FormsModule } from '@angular/forms';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ChangePasswordComponent, MyProfileComponent],\r\n  imports: [\r\n    CommonModule,FormsModule,\r\n    SettingsRoutingModule\r\n  ]\r\n})\r\nexport class SettingsModule { }\r\n"],"sourceRoot":""}