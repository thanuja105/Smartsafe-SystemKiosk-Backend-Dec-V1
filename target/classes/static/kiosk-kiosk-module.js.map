{"version":3,"sources":["webpack:///./src/app/kiosk/createkiosk/createkiosk.component.html","webpack:///./src/app/kiosk/createkiosk/createkiosk.component.scss","webpack:///./src/app/kiosk/createkiosk/createkiosk.component.ts","webpack:///./src/app/kiosk/kiosk-routing.module.ts","webpack:///./src/app/kiosk/kiosk.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,05PAA05P,WAAW,qxEAAqxE,wIAAwI,yBAAyB,qCAAqC,WAAW,k5BAAk5B,0DAA0D,mCAAmC,uCAAuC,woBAAwoB,8EAA8E,yBAAyB,uCAAuC,YAAY,q6BAAq6B,4DAA4D,qCAAqC,wCAAwC,w5BAAw5B,YAAY,yT;;;;;;;;;;;ACArpc,+DAA+D,mK;;;;;;;;;;;;;;;;;;ACAb;AACZ;AAOtC;IAGE;QAFF,SAAI,GAAG,IAAI,mDAAI,EAAE,CAAC;IAEA,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IANU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,yKAA2C;;SAE5C,CAAC;;OACW,oBAAoB,CAQhC;IAAD,2BAAC;CAAA;AARgC;;;;;;;;;;;;;;;;;;;;ACRQ;AACc;AACoB;AAE3E,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,aAAa;QAClB,SAAS,EAAE,uFAAoB;QAChC,IAAI,EAAE;YACJ,KAAK,EAAE,kBAAkB;SAC1B;KAEF;CACF,CAAC;AAMF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACnBU;AACM;AAEa;AACe;AACpB;AACV;AACS;AAYtD;IAAA;IAA2B,CAAC;IAAf,WAAW;QAVvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,uFAAoB,CAAC;YACpC,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,oEAAS;gBACT,0DAAW;gBACX,mEAAc;aACf;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"kiosk-kiosk-module.js","sourcesContent":["module.exports = \"<!-- <ngx-spinner></ngx-spinner> -->\\n<section id=\\\"image\\\">\\n  <div class=row>\\n    <div class=\\\" col-md-12 \\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"container-fluid\\\">\\n          <div class=\\\"row text-left\\\">\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"content-header\\\" style=\\\"font-size: 20px\\\">Kiosk Management</div>\\n              <br>\\n              <p class=\\\"content-sub-header\\\"> <a routerLink=\\\"/dashboard/dashboard1\\\"><span\\n                    style=\\\"font-size: 15px\\\">Home</span></a>\\n                <span style=\\\"font-size: 15px\\\">/Create Kiosk</span>\\n\\n              </p>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n\\n\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <form class=\\\"form\\\" #addClassForm=\\\"ngForm\\\" novalidate>\\n                  <div class=\\\"form-body\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-info \\\" routerLink=\\\"/store/assignstore\\\">\\n                      Assign Store\\n                    </button>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"name\\\"><span *ngIf=\\\"role.name == undefined || role.name =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Enter Kiosk Id\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control border-primary\\\" name=\\\"name\\\"\\n                            [(ngModel)]=\\\"role.name\\\" ngModel #name=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"description\\\"><span *ngIf=\\\"role.description == undefined || role.description =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Kiosk Name\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!description.valid && (description.dirty || description.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control border-primary\\\" name=\\\"description\\\"\\n                            [(ngModel)]=\\\"role.description\\\" ngModel #description=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"name\\\"><span *ngIf=\\\"role.name == undefined || role.name =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Bill Validator Id\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control border-primary\\\" name=\\\"name\\\"\\n                            [(ngModel)]=\\\"role.name\\\" ngModel #name=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"description\\\"><span *ngIf=\\\"role.description == undefined || role.description =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Bill Validator Name\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!description.valid && (description.dirty || description.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control border-primary\\\" name=\\\"description\\\"\\n                            [(ngModel)]=\\\"role.description\\\" ngModel #description=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"name\\\"><span *ngIf=\\\"role.name == undefined || role.name =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Printer Id\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\" *ngIf=\\\"!name.valid && (name.dirty || name.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"name\\\" class=\\\"form-control border-primary\\\" name=\\\"name\\\"\\n                            [(ngModel)]=\\\"role.name\\\" ngModel #name=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label for=\\\"description\\\"><span *ngIf=\\\"role.description == undefined || role.description =='' \\\"\\n                              style=\\\"color: red\\\">*</span>Printer Name\\n                          </label>\\n                          <span class=\\\" text-muted danger\\\"\\n                            *ngIf=\\\"!description.valid && (description.dirty || description.touched)\\\">\\n                            is required!\\n                          </span>\\n                          <input type=\\\"text\\\" id=\\\"description\\\" class=\\\"form-control border-primary\\\" name=\\\"description\\\"\\n                            [(ngModel)]=\\\"role.description\\\" ngModel #description=\\\"ngModel\\\" required>\\n\\n                        </div>\\n                      </div>\\n\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"form-group\\\">\\n                          <label class=\\\"d-block\\\">Status</label>\\n                          <div class=\\\"input-group\\\">\\n                            <div class=\\\"custom-control custom-radio d-inline-block float-left\\\">\\n                              <input type=\\\"radio\\\" checked id=\\\"active\\\" name=\\\"active\\\" class=\\\"custom-control-input\\\"\\n                                [value]=true [(ngModel)]=\\\"role.active\\\">\\n                              <label class=\\\"custom-control-label\\\" for=\\\"active\\\">Active</label>\\n                            </div>\\n                            <div class=\\\"custom-control custom-radio d-inline-block float-left ml-1\\\">\\n                              <input type=\\\"radio\\\" id=\\\"inactive\\\" name=\\\"inactive\\\" class=\\\"custom-control-input\\\"\\n                                [value]=false [(ngModel)]=\\\"role.active\\\">\\n                              <label class=\\\"custom-control-label\\\" for=\\\"inactive\\\">In Active</label>\\n                            </div>\\n                          </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col-md-6\\\">\\n                        <fieldset class=\\\"form-group\\\">\\n                          <label for=\\\"storeSelect\\\">Select Store Id</label>\\n                          <select required [(ngModel)]=\\\"role\\\" id=\\\"role\\\" name=\\\"role\\\" class=\\\"form-control border-primary\\\">\\n                            <option>Select Store Id</option>\\n                            <option [ngValue]=\\\"role\\\" *ngFor=\\\"let role of roles\\\">\\n                              {{role.name}} </option>\\n                          </select>\\n                        </fieldset>\\n\\n                      </div>\\n                    </div>\\n                  </div>\\n             \\n                  <div class=\\\"form-actions center\\\">\\n\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-primary mr-1\\\" (click)=\\\"addRole()\\\"\\n                      [disabled]=\\\"!addClassForm.valid\\\">\\n                      <i class=\\\"fa fa-check-square-o\\\"></i> Create\\n                    </button>\\n                    <button type=\\\"button\\\" class=\\\"btn btn-raised btn-warning\\\">\\n                      <i class=\\\"ft-x\\\"></i> Cancel\\n                    </button>\\n                   </div>\\n                 </form>\\n             </div>\\n           </div>\\n         </div>\\n       </div>\\n     </div>\\n   </div>\\n </div>\\n</section>\\n<section id=\\\"image\\\">\\n  <div class=row>\\n    <div class=\\\" col-md-12 \\\">\\n      <div class=\\\"card\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <section id=\\\"simple\\\">\\n\\n              <!-- <div class=\\\"col-sm-6\\\">\\n                <form role=\\\"search\\\">\\n                  <div class=\\\"position-relative has-icon-right\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control round\\\" placeholder=\\\"Search\\\" name=\\\"search\\\"\\n                      [(ngModel)]=\\\"searchText\\\" autocomplete=\\\"off\\\">\\n                    <div class=\\\"form-control-position\\\">\\n                      <i class=\\\"ft-search\\\"></i>\\n                    </div>\\n                  </div>\\n                </form>\\n              </div> -->\\n              <br>\\n              <div class=\\\"row text-left\\\">\\n\\n                <div class=\\\"col-sm-12\\\">\\n                  <table class=\\\"table table-responsive-md text-center\\\">\\n                    <thead>\\n                      <tr>\\n                        <th>S.no</th>\\n                        <th>Store Id</th>\\n                        <th>Store Name</th>\\n                        <th>Store Location</th>\\n                        <th>Status</th>\\n                        <th>Action</th>\\n                      </tr>\\n                    </thead>\\n                    <!-- <tbody\\n                        *ngFor=\\\"let role of roles| slice: (page-1) * pageSize : +((page-1) * pageSize) + +pageSize; index as i\\\"> -->\\n                    <tbody *ngFor=\\\"let role of roles\\\">\\n                      <tr>\\n                        <td>{{i+1+(page-1) * pageSize}}</td>\\n                        <td>{{role.name}}</td>\\n                        <td>\\n                          <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editRole(role)\\\"\\n                            placement=\\\"bottom\\\" ngbTooltip=\\\"Edit\\\">\\n                            <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                          </a>\\n                          <!-- <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\"\\n                                                      (click)=\\\"deleteClass(class.id)\\\">\\n                                                    \\n                                                      <i class=\\\"icon-trash font-medium-3 mr-2\\\"></i>\\n                                                  </a> -->\\n                        </td>\\n                        <td><button type=\\\"button\\\" class=\\\"btn btn-raised\\\" disabled style=\\\"cursor:default\\\"\\n                            [ngClass]=\\\"{' btn-primary' : role.active,'btn-warning' :!role.active }\\\">\\n                            {{ role.active ? 'Active' : 'Inactive' }}\\n\\n                          </button></td>\\n\\n\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n                  <!-- <div *ngIf=\\\"searchText != ''\\\">\\n                    <table class=\\\"table table-responsive-md text-center\\\">\\n                      <thead>\\n                        <tr>\\n                          <th>S.no</th>\\n                          <th>Class Name</th>\\n                          <th>Edit</th>\\n                          <th>Status</th>\\n\\n                        </tr>\\n                      </thead>\\n                      <tbody *ngFor=\\\"let class of classes| filter:searchText ; index as i\\\">\\n                        <tr>\\n                          <td>{{i+1+(page-1) * pageSize}}</td>\\n                          <td>{{class.name}}</td>\\n                          <td>\\n                            <a class=\\\"success p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\" (click)=\\\"editClass(class)\\\"\\n                              placement=\\\"bottom\\\" ngbTooltip=\\\"Edit\\\">\\n                              <i class=\\\"ft-edit-2 font-medium-3 mr-2\\\"></i>\\n                            </a>\\n                            <a class=\\\"danger p-0\\\" data-original-title=\\\"\\\" title=\\\"\\\"\\n                                                        (click)=\\\"deleteClass(class.id)\\\">\\n                                                      \\n                                                        <i class=\\\"icon-trash font-medium-3 mr-2\\\"></i>\\n                                                    </a>\\n                          </td>\\n                          <td><button type=\\\"button\\\" class=\\\"btn btn-raised\\\" disabled style=\\\"cursor:default\\\"\\n                              [ngClass]=\\\"{' btn-primary' : class.active,'btn-warning' :!class.active }\\\">\\n                              {{ class.active ? 'Active' : 'Inactive' }}\\n\\n                            </button></td>\\n\\n\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </div> -->\\n                  <!-- <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-6\\\">\\n                      <div class=\\\"formgroup\\\">\\n                        <ngb-pagination [(page)]=\\\"page\\\" [pageSize]=\\\"pageSize\\\" [collectionSize]=\\\"classes.length\\\"\\n                          [ellipses]=\\\"false\\\" [boundaryLinks]=\\\"true\\\"></ngb-pagination>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6\\\">\\n                      <div class=\\\"formgroup\\\">\\n                        Items per Page:\\n                        <select (change)=\\\"handlePageSizeChange($event)\\\">\\n                          <option *ngFor=\\\"let pageSize of pageSizes\\\" [ngValue]=\\\"pageSize\\\">\\n                            {{ pageSize }}\\n                          </option>\\n                        </select>\\n                      </div>\\n                    </div>\\n                  </div> -->\\n                </div>\\n              </div>\\n            </section>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2tpb3NrL2NyZWF0ZWtpb3NrL2NyZWF0ZWtpb3NrLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Role } from 'app/model/role';\n\n@Component({\n  selector: 'app-createkiosk',\n  templateUrl: './createkiosk.component.html',\n  styleUrls: ['./createkiosk.component.scss']\n})\nexport class CreatekioskComponent implements OnInit {\nrole = new Role();\nroles : Role[];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreatekioskComponent } from './createkiosk/createkiosk.component';\n\nconst routes: Routes = [\n  {\n    path: 'createkiosk',\n     component: CreatekioskComponent,\n    data: {\n      title: 'Kiosk Management'\n    },\n    \n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class KioskRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { KioskRoutingModule } from './kiosk-routing.module';\nimport { CreatekioskComponent } from './createkiosk/createkiosk.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\n@NgModule({\n  declarations: [CreatekioskComponent],\n  imports: [\n    CommonModule,\n    KioskRoutingModule,\n    NgbModule,\n    FormsModule,\n    NgSelectModule\n  ]\n})\nexport class KioskModule { }\n"],"sourceRoot":""}